{"version":3,"sources":["component/WeatherCard.jsx","component/WeatherMain.jsx","component/WeatherTime.jsx","component/xyConv.js","component/Weather.jsx","App.jsx","index.js"],"names":["WeatherCard","weather","score","useEffect","className","item","filter","category","obsrValue","style","color","dong","baseTime","substring","date","WeatherMain","id","length","reduce","a","b","toFixed","backgroundImage","WeatherTime","time","minuteRef","useRef","secondsRef","hoursRef","current","transform","minute","seconds","hour","ref","RE","GRID","SLAT1","SLAT2","OLON","OLAT","XO","YO","Weather","useState","position","setPosition","setTime","setWeather","weatherAxios","setWeatherAxios","setScore","getPostion","lat","long","axios","get","headers","then","data","latitude","longitude","results","region","area3","name","window","localStorage","setItem","JSON","stringify","navigator","geolocation","getCurrentPosition","p","getItem","parse","coords","error","setInterval","moment","tz","format","ampm","getWeather","timeBase","v1","v2","DEGRAD","Math","PI","re","slat1","slat2","olon","olat","sn","tan","log","cos","sf","pow","ro","rs","lng","ra","theta","x","floor","sin","y","xyConv","response","body","items","catch","abs","baseDate","scoreAll","App","ReactDOM","render","document","getElementById"],"mappings":"sSAKe,SAASA,EAAT,GAA0C,IAAnBC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,MAE7C,OADAC,oBAAU,aAAU,CAACF,IAEnB,yBAAKG,UAAU,mBACb,wDACA,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,eACb,uBAAGA,UAAU,SAAb,gBACCH,GACCA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,UACtD,KACFP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,WACrD,MACFN,EAAM,IAAM,GACX,oCACE,uBACEE,UAAU,UACVK,MAAO,CAAEC,MAAO,0BAGdT,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,UAEJ,WAEH,yBAAKJ,UAAU,gBAGjB,oCACE,uBACEA,UAAU,UACVK,MAAO,CAAEC,MAAO,yBAGdT,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,UAEJ,WAEH,yBAAKJ,UAAU,eAGpBH,EAAU,GAAK,0BAAMG,UAAU,WAAhB,sBACfH,IACEA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GACnDC,WAAa,KACdP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,YAAc,MAAQ,uBAAGJ,UAAU,WAAb,6BAE/B,yBAAKA,UAAU,eACb,uBAAGA,UAAU,SAAb,0CACCH,IACEA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GACnDC,WAAa,KACdP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,YAAc,MAAQ,uBAAGJ,UAAU,WAAb,4BAC5BH,EAAU,GAAK,0BAAMG,UAAU,WAAhB,sBACfH,GAEkB,IADjBA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,WACD,oCACE,uBACEJ,UAAU,UACVK,MAAO,CAAEC,MAAO,0BAFlB,8BAMA,yBAAKN,UAAU,gBAGpBH,GAEkB,IADjBA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,WACD,oCACE,uBACEJ,UAAU,UACVK,MAAO,CAAEC,MAAO,yBAFlB,2CAMA,yBAAKN,UAAU,cAGpBH,GAEkB,IADjBA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,WACD,oCACE,uBACEJ,UAAU,UACVK,MAAO,CAAEC,MAAO,yBAFlB,mDAMA,yBAAKN,UAAU,cAGpBH,GAEkB,IADjBA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,WACD,oCACE,uBACEJ,UAAU,UACVK,MAAO,CAAEC,MAAO,0BAFlB,2CAMA,yBAAKN,UAAU,iBAGpBH,GAEkB,IADjBA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,WACD,oCACE,uBACEJ,UAAU,UACVK,MAAO,CAAEC,MAAO,yBAFlB,qCAMA,yBAAKN,UAAU,eAIvB,yBAAKA,UAAU,eACb,uBAAGA,UAAU,SAAb,gBACCH,GACCA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,UACtD,KACFP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,WACrD,MACFN,EAAM,IAAM,GACX,oCACE,uBACEE,UAAU,UACVK,MAAO,CAAEC,MAAO,0BAGdT,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,UAEJ,MAEH,yBAAKJ,UAAU,gBAGjB,oCACE,uBACEA,UAAU,UACVK,MAAO,CAAEC,MAAO,yBAGdT,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,UAEJ,MAEH,yBAAKJ,UAAU,eAIpBH,EAAU,GAAK,0BAAMG,UAAU,WAAhB,sBACfH,IACEA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GACnDC,WAAa,KACdP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,YAAc,MAAQ,uBAAGJ,UAAU,WAAb,6BAE/B,yBAAKA,UAAU,eACb,uBAAGA,UAAU,SAAb,gBACCH,GACCA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,UACtD,KACFP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,WACrD,KACD,oCACE,uBACEJ,UAAU,UACVK,MAAO,CAAEC,MAAO,0BAGdT,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,UAEJ,QAEH,yBAAKJ,UAAU,iBAIpBH,EAAU,GAAK,0BAAMG,UAAU,WAAhB,sBACfH,IACEA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GACnDC,WAAa,KACdP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,YAAc,MAAQ,uBAAGJ,UAAU,WAAb,6BAE/B,yBAAKA,UAAU,eACb,uBAAGA,UAAU,SAAb,4BACA,uBAAGA,UAAU,WACVH,EAAU,GAAK,0BAAMG,UAAU,WAAhB,sBACfH,GAAWA,EAAQU,OAGxB,yBAAKP,UAAU,eACb,uBAAGA,UAAU,SAAb,4BACA,uBAAGA,UAAU,WACVH,EAAU,GAAK,0BAAMG,UAAU,WAAhB,sBACfH,GAAO,UAAO,UAAGA,EAAQI,KAAK,GAAGO,UAAWC,UAAU,EAAG,GAAlD,WACPZ,GAAW,0BAAMG,UAAU,SAASH,EAAQa,UChN1C,SAASC,EAAT,GAAyC,EAAlBd,QAAmB,IAAVC,EAAS,EAATA,MAC7C,OACE,yBAAKc,GAAG,eACLd,GACkB,IAAjBA,EAAMe,WACHf,EAAMgB,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAK,GAAGC,QAAQ,IAAM,GAClD,oCACE,yBACEjB,UAAU,eACVK,MAAO,CAAEC,MAAO,0BAEhB,0BAAMN,UAAU,SAAhB,YACQF,EAAMgB,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAK,GAAGC,QAAQ,GADnD,MAGA,0BAAMjB,UAAU,YAAhB,QACA,yBAAKA,UAAU,WACb,uBAAGK,MAAO,CAAEC,MAAO,0BAChB,+DAEH,yBACEN,UAAU,MACVK,MAAO,CAAEa,gBAAgB,8BAMjC,yBACElB,UAAU,eACVK,MAAO,CAAEC,MAAO,yBAEhB,0BAAMN,UAAU,SAAhB,YACQF,EAAMgB,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAK,GAAGC,QAAQ,GADnD,MAGA,0BAAMjB,UAAU,YAAhB,QACA,yBAAKA,UAAU,WACb,uBAAGK,MAAO,CAAEC,MAAO,yBAChB,0EAEH,yBACEN,UAAU,MACVK,MAAO,CAAEa,gBAAgB,8BAKnC,yBAAKlB,UAAU,QAAf,KACA,yBAAKA,UAAU,eACb,4JACA,yBACEA,UAAU,MACVK,MAAO,CAAEa,gBAAgB,6BCtDpB,SAASC,EAAT,GAAgC,IAATC,EAAQ,EAARA,KAC9BC,EAAYC,mBACZC,EAAaD,mBACbE,EAAWF,mBAcjB,OAbAvB,oBAAU,WACJsB,GAAaD,IACfC,EAAUI,QAAQpB,MAAMqB,UAAxB,iBACE,GAAKN,EAAKO,OADmC,GAA/C,SAGEJ,GAAcH,IAChBG,EAAWE,QAAQpB,MAAMqB,UAAzB,iBACE,GAAKN,EAAKQ,QADoC,GAAhD,SAGEJ,GAAYJ,IACdI,EAASC,QAAQpB,MAAMqB,UAAvB,iBAAmD,IAAMN,EAAKS,KAAhB,GAA9C,UAED,CAACT,IAEF,yBAAKpB,UAAU,mBACb,wDACA,yBAAKA,UAAU,mBACb,yBAAKY,GAAG,aACN,yBAAKA,GAAG,QAAQkB,IAAKN,IACrB,yBAAKZ,GAAG,SAASkB,IAAKT,IACtB,yBAAKT,GAAG,UAAUkB,IAAKP,OC1BjC,IAAMQ,EAAK,WACLC,EAAO,EACPC,EAAQ,GACRC,EAAQ,GACRC,EAAO,IACPC,EAAO,GACPC,EAAK,GACLC,EAAK,ICCI,SAASC,IAAW,IAAD,EACAC,qBADA,mBACzBC,EADyB,KACfC,EADe,OAERF,qBAFQ,mBAEzBpB,EAFyB,KAEnBuB,EAFmB,OAGFH,qBAHE,mBAGzB3C,EAHyB,KAGhB+C,EAHgB,OAIQJ,oBAAS,GAJjB,mBAIzBK,EAJyB,KAIXC,EAJW,OAKNN,mBAAS,IALH,mBAKzB1C,EALyB,KAKlBiD,EALkB,KAiPhC,OAzOAhD,oBAAU,WACR,SAASiD,EAAWC,EAAKC,GACvBC,IACGC,IADH,yIAEsIF,EAAKjC,QACrI,GAHN,aAIUgC,EAAIhC,QAAQ,GAJtB,+BAKI,CACEoC,QAAS,CACP,yBAA0B,aAC1B,sBAAuB,8CAI5BC,KAAK,SAAAC,GACJb,EAAY,CACVc,UAAWP,EAAIhC,QAAQ,GACvBwC,WAAYP,EAAKjC,QAAQ,GACzBV,KAAMgD,EAAKA,KAAKG,QAAQ,GAAGC,OAAOC,MAAMC,OAE1CC,OAAOC,aAAaC,QAClB,WACAC,KAAKC,UAAU,CACbV,UAAWP,EAAIhC,QAAQ,GACvBwC,WAAYP,EAAKjC,QAAQ,GACzBV,KAAMgD,EAAKA,KAAKG,QAAQ,GAAGC,OAAOC,MAAMC,UAKlDM,UAAUC,YAAYC,mBACpB,SAAAC,GACOR,OAAOC,aAAaQ,QAAQ,YAG7BN,KAAKO,MAAMV,OAAOC,aAAaQ,QAAQ,aAAaf,UACpDS,KAAKO,MAAMV,OAAOC,aAAaQ,QAAQ,aAAad,YAGpDQ,KAAKO,MAAMV,OAAOC,aAAaQ,QAAQ,aAAaf,YACjDc,EAAEG,OAAOjB,SAASvC,QAAQ,IAC7BgD,KAAKO,MAAMV,OAAOC,aAAaQ,QAAQ,aAAad,aACjDa,EAAEG,OAAOhB,UAAUxC,QAAQ,GAE9B+B,EAAWsB,EAAEG,OAAOjB,SAAUc,EAAEG,OAAOhB,WAEvCf,EAAYuB,KAAKO,MAAMV,OAAOC,aAAaQ,QAAQ,eAbrDvB,EAAWsB,EAAEG,OAAOjB,SAAUc,EAAEG,OAAOhB,YAiB3C,SAAAiB,GACOZ,OAAOC,aAAaQ,QAAQ,YAG/B7B,EAAYuB,KAAKO,MAAMV,OAAOC,aAAaQ,QAAQ,cAFnDvB,EAAW,mBAAoB,cAMrC2B,YAAY,WACVhC,EAAQ,CACNjC,KAAMkE,IAAOC,GAAG,cAAcC,OAAO,cACrCjD,KAAM+C,IAAOC,GAAG,cAAcC,OAAO,MACrCnD,OAAQiD,IAAOC,GAAG,cAAcC,OAAO,MACvClD,QAASgD,IAAOC,GAAG,cAAcC,OAAO,MACxCC,KAAMH,IAAOC,GAAG,cAAcC,OAAO,QAEtC,MACF,IAIH/E,oBAAU,WACR,SAASiF,IAEP,GADAlC,GAAgB,GAE2B,OAAzC8B,IAAOC,GAAG,cAAcC,OAAO,QAC9BF,IAAOC,GAAG,cAAcC,OAAO,MAAQ,GAExChC,GAAgB,OAJlB,CAFoB,IAUhBmC,EAVgB,ED/EX,SAAgBC,EAAIC,GACjC,IAAMC,EAASC,KAAKC,GAAK,IAEnBC,EAAKxD,EAAKC,EACVwD,EAAQvD,EAAQmD,EAChBK,EAAQvD,EAAQkD,EAChBM,EAAOvD,EAAOiD,EACdO,EAAOvD,EAAOgD,EAEhBQ,EACFP,KAAKQ,IAAc,IAAVR,KAAKC,GAAoB,GAARG,GAC1BJ,KAAKQ,IAAc,IAAVR,KAAKC,GAAoB,GAARE,GAC5BI,EAAKP,KAAKS,IAAIT,KAAKU,IAAIP,GAASH,KAAKU,IAAIN,IAAUJ,KAAKS,IAAIF,GAC5D,IAAII,EAAKX,KAAKQ,IAAc,IAAVR,KAAKC,GAAoB,GAARE,GACnCQ,EAAMX,KAAKY,IAAID,EAAIJ,GAAMP,KAAKU,IAAIP,GAAUI,EAC5C,IAAIM,EAAKb,KAAKQ,IAAc,IAAVR,KAAKC,GAAmB,GAAPK,GACnCO,EAAMX,EAAKS,EAAMX,KAAKY,IAAIC,EAAIN,GAC9B,IAAMO,EAAK,GACXA,EAAGlD,IAAMiC,EACTiB,EAAGC,IAAMjB,EACT,IAAIkB,EAAKhB,KAAKQ,IAAc,IAAVR,KAAKC,GAAYJ,EAAKE,EAAS,IACjDiB,EAAMd,EAAKS,EAAMX,KAAKY,IAAII,EAAIT,GAC9B,IAAIU,EAAQnB,EAAKC,EAASM,EAM1B,OALIY,EAAQjB,KAAKC,KAAIgB,GAAS,EAAMjB,KAAKC,IACrCgB,GAASjB,KAAKC,KAAIgB,GAAS,EAAMjB,KAAKC,IAC1CgB,GAASV,EACTO,EAAGI,EAAIlB,KAAKmB,MAAMH,EAAKhB,KAAKoB,IAAIH,GAASjE,EAAK,IAC9C8D,EAAGO,EAAIrB,KAAKmB,MAAMN,EAAKG,EAAKhB,KAAKU,IAAIO,GAAShE,EAAK,IAC5C6D,EC4DcQ,CAAOlE,EAASe,SAAUf,EAASgB,WAA5C8C,EATY,EASZA,EAAGG,EATS,EASTA,EAGTzB,GADGL,IAAOC,GAAG,cAAcC,OAAO,OAAS,GAChCF,IAAOC,GAAG,cAAcC,OAAO,SAChCF,IAAOC,GAAG,cAAcC,OAAO,MAAQ,GACzC,YAAQF,IAAOC,GAAG,cAAcC,OAAO,QAAU,KAEjD,WAAOF,IAAOC,GAAG,cAAcC,OAAO,QAAU,KAG1D3B,IACGC,IADH,gPAE6OwB,IACtOC,GAAG,cACHC,OACC,YALR,sBAMqBG,EANrB,eAMoCsB,EANpC,eAM4CG,EAN5C,gBAQGpD,KAAK,SAAAC,GACJX,EAAW,CACTxB,KAAMwD,IAAOC,GAAG,cAAcC,OAAO,QACrCpE,KAAMkE,IAAOC,GAAG,cAAcC,OAAO,YACrC7E,KAAMsD,EAAKA,KAAKqD,SAASC,KAAKC,MAAM7G,KACpCM,KAAMkC,EAASlC,OAEjBuD,OAAOC,aAAaC,QAClB,UACAC,KAAKC,UAAU,CACb9C,KAAMwD,IAAOC,GAAG,cAAcC,OAAO,QACrCpE,KAAMkE,IAAOC,GAAG,cAAcC,OAAO,YACrC7E,KAAMsD,EAAKA,KAAKqD,SAASC,KAAKC,MAAM7G,KACpCM,KAAMkC,EAASlC,QAGnBuC,GAAgB,KAEjBiE,MAAM,SAAArC,GACL5B,GAAgB,MAGlBL,GAAYI,IACTiB,OAAOC,aAAaQ,QAAQ,WAErB1E,GACV+C,EAAWqB,KAAKO,MAAMV,OAAOC,aAAaQ,QAAQ,aAFlDS,IAIEnF,GAAW4C,GAEX4C,KAAK2B,KACFpC,IAAOC,GAAG,cAAcC,OAAO,iBAC7B,GAAD,OAAIjF,EAAQI,KAAK,GAAGgH,UAApB,OAA+BpH,EAAQI,KAAK,GAAGO,YAC9C,KAELwE,MAIL,CAACvC,EAAU5C,EAASuB,EAAMyB,IAI7B9C,oBAAU,WACR,IAAMmH,EAAW,GACjB,GAAIrH,EAAS,CAiDX,OA/CEA,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,WACtD,KACFP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,YACrD,IAGDP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,WACtD,IACFP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,WACtD,GAEF8G,EAAS,GAAK,IAEdrH,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,WACtD,IACFP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,UAAY,GAEpE8G,EAAS,IACL,IAKE,EAJF7B,KAAK2B,IACHnH,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,UAAY,KAGjB,GACF,EAGFP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,UACtD,IACFP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,YACrD,GAEH8G,EAAS,GACP,IAIE,GAHD,GACCrH,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAClDC,WAKP8G,EAAS,GAAK,EAGhBA,EAAS,GAAK,GAGdrH,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,WAExD,KAAK,EACH8G,EAAS,GAAK,IACd,MACF,KAAK,EACHA,EAAS,GAAK,GACd,MACF,KAAK,EACHA,EAAS,GAAK,GACd,MACF,KAAK,EACHA,EAAS,GAAK,GACd,MACF,KAAK,EACHA,EAAS,GAAK,EACd,MACF,QACEA,EAAS,GAAK,GAIhBrH,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,WACtD,IACFP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,WAAa,GAErE8G,EAAS,GAAK,KAEdrH,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,WACtD,GACFP,EAAQI,KAAKC,OAAO,SAAAD,GAAI,MAAsB,QAAlBA,EAAKE,WAAoB,GAAGC,UAExD8G,EAAS,GAAK,IAKlBnE,EAASmE,IACR,CAACrH,IAEF,oCACE,yBAAKe,GAAG,kBACN,kBAACD,EAAD,CAAad,QAASA,EAASC,MAAOA,IACtC,kBAACF,EAAD,CAAaC,QAASA,EAASC,MAAOA,IACtC,kBAACqB,EAAD,CAAaC,KAAMA,MC9OZ+F,MAXf,WACE,OACE,oCACE,gCACE,yBAAKvG,GAAG,cAAR,uBAEF,kBAAC2B,EAAD,QCPN6E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.06b5f8d8.chunk.js","sourcesContent":["/* eslint-disable react/require-default-props */\n/* eslint-disable react/forbid-prop-types */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function WeatherCard({ weather, score }) {\n  useEffect(() => {}, [weather]);\n  return (\n    <div className=\"weatherCardWrap\">\n      <p>현재 날씨</p>\n      <div className=\"weatherCardMain\">\n        <div className=\"weatherCard\">\n          <p className=\"title\">기온</p>\n          {weather &&\n            weather.item.filter(item => item.category === 'T1H')[0].obsrValue <\n              900 &&\n            weather.item.filter(item => item.category === 'T1H')[0].obsrValue >\n              -900 &&\n            (score[0] >= 50 ? (\n              <>\n                <p\n                  className=\"details\"\n                  style={{ color: 'rgba(22, 160, 133, 1)' }}\n                >\n                  {\n                    weather.item.filter(item => item.category === 'T1H')[0]\n                      .obsrValue\n                  }\n                  {' ℃'}\n                </p>\n                <div className=\"greenLight\" />\n              </>\n            ) : (\n              <>\n                <p\n                  className=\"details\"\n                  style={{ color: 'rgba(231, 76, 60, 1)' }}\n                >\n                  {\n                    weather.item.filter(item => item.category === 'T1H')[0]\n                      .obsrValue\n                  }\n                  {' ℃'}\n                </p>\n                <div className=\"redLight\" />\n              </>\n            ))}\n          {weather ? '' : <span className=\"loading\">로딩중</span>}\n          {weather &&\n            (weather.item.filter(item => item.category === 'T1H')[0]\n              .obsrValue >= 900 ||\n              weather.item.filter(item => item.category === 'T1H')[0]\n                .obsrValue <= -900) && <p className=\"details\">관측실패</p>}\n        </div>\n        <div className=\"weatherCard\">\n          <p className=\"title\">비오나?눈오나?</p>\n          {weather &&\n            (weather.item.filter(item => item.category === 'PTY')[0]\n              .obsrValue >= 900 ||\n              weather.item.filter(item => item.category === 'PTY')[0]\n                .obsrValue <= -900) && <p className=\"details\">관측실패</p>}\n          {weather ? '' : <span className=\"loading\">로딩중</span>}\n          {weather &&\n            weather.item.filter(item => item.category === 'PTY')[0]\n              .obsrValue === 0 && (\n              <>\n                <p\n                  className=\"details\"\n                  style={{ color: 'rgba(22, 160, 133, 1)' }}\n                >\n                  둘다 안옴!\n                </p>\n                <div className=\"greenLight\" />\n              </>\n            )}\n          {weather &&\n            weather.item.filter(item => item.category === 'PTY')[0]\n              .obsrValue === 1 && (\n              <>\n                <p\n                  className=\"details\"\n                  style={{ color: 'rgba(231, 76, 60, 1)' }}\n                >\n                  나이스! 비온다!\n                </p>\n                <div className=\"redLight\" />\n              </>\n            )}\n          {weather &&\n            weather.item.filter(item => item.category === 'PTY')[0]\n              .obsrValue === 2 && (\n              <>\n                <p\n                  className=\"details\"\n                  style={{ color: 'rgba(231, 76, 60, 1)' }}\n                >\n                  우와~ 비랑 눈 둘다!\n                </p>\n                <div className=\"redLight\" />\n              </>\n            )}\n          {weather &&\n            weather.item.filter(item => item.category === 'PTY')[0]\n              .obsrValue === 3 && (\n              <>\n                <p\n                  className=\"details\"\n                  style={{ color: 'rgba(241, 196, 15, 1)' }}\n                >\n                  나이스! 눈온다!\n                </p>\n                <div className=\"yellowLight\" />\n              </>\n            )}\n          {weather &&\n            weather.item.filter(item => item.category === 'PTY')[0]\n              .obsrValue === 4 && (\n              <>\n                <p\n                  className=\"details\"\n                  style={{ color: 'rgba(231, 76, 60, 1)' }}\n                >\n                  오! 소나기다!\n                </p>\n                <div className=\"redLight\" />\n              </>\n            )}\n        </div>\n        <div className=\"weatherCard\">\n          <p className=\"title\">습도</p>\n          {weather &&\n            weather.item.filter(item => item.category === 'REH')[0].obsrValue <\n              900 &&\n            weather.item.filter(item => item.category === 'REH')[0].obsrValue >\n              -900 &&\n            (score[2] >= 50 ? (\n              <>\n                <p\n                  className=\"details\"\n                  style={{ color: 'rgba(22, 160, 133, 1)' }}\n                >\n                  {\n                    weather.item.filter(item => item.category === 'REH')[0]\n                      .obsrValue\n                  }\n                  {' %'}\n                </p>\n                <div className=\"greenLight\" />\n              </>\n            ) : (\n              <>\n                <p\n                  className=\"details\"\n                  style={{ color: 'rgba(231, 76, 60, 1)' }}\n                >\n                  {\n                    weather.item.filter(item => item.category === 'REH')[0]\n                      .obsrValue\n                  }\n                  {' %'}\n                </p>\n                <div className=\"redLight\" />\n              </>\n            ))}\n\n          {weather ? '' : <span className=\"loading\">로딩중</span>}\n          {weather &&\n            (weather.item.filter(item => item.category === 'REH')[0]\n              .obsrValue >= 900 ||\n              weather.item.filter(item => item.category === 'REH')[0]\n                .obsrValue <= -900) && <p className=\"details\">관측실패</p>}\n        </div>\n        <div className=\"weatherCard\">\n          <p className=\"title\">풍속</p>\n          {weather &&\n            weather.item.filter(item => item.category === 'WSD')[0].obsrValue <\n              900 &&\n            weather.item.filter(item => item.category === 'WSD')[0].obsrValue >\n              -900 && (\n              <>\n                <p\n                  className=\"details\"\n                  style={{ color: 'rgba(241, 196, 15, 1)' }}\n                >\n                  {\n                    weather.item.filter(item => item.category === 'WSD')[0]\n                      .obsrValue\n                  }\n                  {' m/s'}\n                </p>\n                <div className=\"yellowLight\" />\n              </>\n            )}\n\n          {weather ? '' : <span className=\"loading\">로딩중</span>}\n          {weather &&\n            (weather.item.filter(item => item.category === 'WSD')[0]\n              .obsrValue >= 900 ||\n              weather.item.filter(item => item.category === 'WSD')[0]\n                .obsrValue <= -900) && <p className=\"details\">관측실패</p>}\n        </div>\n        <div className=\"weatherCard\">\n          <p className=\"title\">지역기준</p>\n          <p className=\"details\">\n            {weather ? '' : <span className=\"loading\">로딩중</span>}\n            {weather && weather.dong}\n          </p>\n        </div>\n        <div className=\"weatherCard\">\n          <p className=\"title\">날짜기준</p>\n          <p className=\"details\">\n            {weather ? '' : <span className=\"loading\">로딩중</span>}\n            {weather && `${`${weather.item[0].baseTime}`.substring(0, 2)} 시`}\n            {weather && <span className=\"small\">{weather.date}</span>}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nWeatherCard.propTypes = {\n  weather: PropTypes.object,\n  score: PropTypes.array,\n};\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function WeatherMain({ weather, score }) {\n  return (\n    <div id=\"weatherMain\">\n      {score &&\n        score.length !== 0 &&\n        (+(score.reduce((a, b) => a + b) / 3).toFixed(2) >= 50 ? (\n          <>\n            <div\n              className=\"scoreWrapper\"\n              style={{ color: 'rgba(22, 160, 133, 1)' }}\n            >\n              <span className=\"score\">\n                {` ${(score.reduce((a, b) => a + b) / 3).toFixed(2)} `}\n              </span>\n              <span className=\"scoreSub\">/100</span>\n              <div className=\"details\">\n                <p style={{ color: 'rgba(22, 160, 133, 1)' }}>\n                  {'\"나가기 좋은 날입니다!\"'}\n                </p>\n                <div\n                  className=\"bar\"\n                  style={{ backgroundImage: `url(\"images/bar.png\")` }}\n                />\n              </div>\n            </div>\n          </>\n        ) : (\n          <div\n            className=\"scoreWrapper\"\n            style={{ color: 'rgba(231, 76, 60, 1)' }}\n          >\n            <span className=\"score\">\n              {` ${(score.reduce((a, b) => a + b) / 3).toFixed(2)} `}\n            </span>\n            <span className=\"scoreSub\">/100</span>\n            <div className=\"details\">\n              <p style={{ color: 'rgba(231, 76, 60, 1)' }}>\n                {'나가면 죽기 좋은 날입니다!'}\n              </p>\n              <div\n                className=\"bar\"\n                style={{ backgroundImage: `url(\"images/bar.png\")` }}\n              />\n            </div>\n          </div>\n        ))}\n      <div className=\"help\">?</div>\n      <div className=\"helpDetails\">\n        <p>점수는 기온, 비, 눈 여부, 습도에 따라 정해집니다.</p>\n        <div\n          className=\"bar\"\n          style={{ backgroundImage: `url(\"images/bar.png\")` }}\n        />\n      </div>\n    </div>\n  );\n}\n\nWeatherMain.propTypes = {\n  weather: PropTypes.object,\n  score: PropTypes.array,\n};\n","import React, { useEffect, useRef } from 'react';\n\nexport default function WeatherTime({ time }) {\n  const minuteRef = useRef();\n  const secondsRef = useRef();\n  const hoursRef = useRef();\n  useEffect(() => {\n    if (minuteRef && time) {\n      minuteRef.current.style.transform = `rotate(${-90 +\n        6 * +time.minute}deg)`;\n    }\n    if (secondsRef && time) {\n      secondsRef.current.style.transform = `rotate(${-90 +\n        6 * +time.seconds}deg)`;\n    }\n    if (hoursRef && time) {\n      hoursRef.current.style.transform = `rotate(${-90 + 30 * +time.hour}deg)`;\n    }\n  }, [time]);\n  return (\n    <div className=\"weatherCardWrap\">\n      <p>현재 시간</p>\n      <div className=\"weatherCardMain\">\n        <div id=\"clockWrap\">\n          <div id=\"hours\" ref={hoursRef} />\n          <div id=\"minute\" ref={minuteRef} />\n          <div id=\"seconds\" ref={secondsRef} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","const RE = 6371.00877; // 지구 반경(km)\nconst GRID = 5.0; // 격자 간격(km)\nconst SLAT1 = 30.0; // 투영 위도1(degree)\nconst SLAT2 = 60.0; // 투영 위도2(degree)\nconst OLON = 126.0; // 기준점 경도(degree)\nconst OLAT = 38.0; // 기준점 위도(degree)\nconst XO = 43; // 기준점 X좌표(GRID)\nconst YO = 136; // 기준점 Y좌표(GRID)\n\nexport default function xyConv(v1, v2) {\n  const DEGRAD = Math.PI / 180.0;\n\n  const re = RE / GRID;\n  const slat1 = SLAT1 * DEGRAD;\n  const slat2 = SLAT2 * DEGRAD;\n  const olon = OLON * DEGRAD;\n  const olat = OLAT * DEGRAD;\n\n  let sn =\n    Math.tan(Math.PI * 0.25 + slat2 * 0.5) /\n    Math.tan(Math.PI * 0.25 + slat1 * 0.5);\n  sn = Math.log(Math.cos(slat1) / Math.cos(slat2)) / Math.log(sn);\n  let sf = Math.tan(Math.PI * 0.25 + slat1 * 0.5);\n  sf = (Math.pow(sf, sn) * Math.cos(slat1)) / sn;\n  let ro = Math.tan(Math.PI * 0.25 + olat * 0.5);\n  ro = (re * sf) / Math.pow(ro, sn);\n  const rs = {};\n  rs.lat = v1;\n  rs.lng = v2;\n  let ra = Math.tan(Math.PI * 0.25 + v1 * DEGRAD * 0.5);\n  ra = (re * sf) / Math.pow(ra, sn);\n  let theta = v2 * DEGRAD - olon;\n  if (theta > Math.PI) theta -= 2.0 * Math.PI;\n  if (theta < -Math.PI) theta += 2.0 * Math.PI;\n  theta *= sn;\n  rs.x = Math.floor(ra * Math.sin(theta) + XO + 0.5);\n  rs.y = Math.floor(ro - ra * Math.cos(theta) + YO + 0.5);\n  return rs;\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport WeatherCard from './WeatherCard';\nimport WeatherMain from './WeatherMain';\nimport WeatherTime from './WeatherTime';\nimport xyConv from './xyConv';\n\nexport default function Weather() {\n  const [position, setPosition] = useState();\n  const [time, setTime] = useState();\n  const [weather, setWeather] = useState();\n  const [weatherAxios, setWeatherAxios] = useState(true);\n  const [score, setScore] = useState([]);\n\n  // 위치 가져오기\n  useEffect(() => {\n    function getPostion(lat, long) {\n      axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/https://naveropenapi.apigw.ntruss.com/map-reversegeocode/v2/gc?request=coordsToaddr&coords=${long.toFixed(\n            4,\n          )},${+lat.toFixed(4)}&orders=admcode&output=json`,\n          {\n            headers: {\n              'X-NCP-APIGW-API-KEY-ID': 'y6syzp2el8',\n              'X-NCP-APIGW-API-KEY': 'oGUQ22oSWOEDf44apBf9QSZVKanLLauMgr5CnBDy',\n            },\n          },\n        )\n        .then(data => {\n          setPosition({\n            latitude: +lat.toFixed(4),\n            longitude: +long.toFixed(4),\n            dong: data.data.results[0].region.area3.name,\n          });\n          window.localStorage.setItem(\n            'position',\n            JSON.stringify({\n              latitude: +lat.toFixed(4),\n              longitude: +long.toFixed(4),\n              dong: data.data.results[0].region.area3.name,\n            }),\n          );\n        });\n    }\n    navigator.geolocation.getCurrentPosition(\n      p => {\n        if (!window.localStorage.getItem('position')) {\n          getPostion(p.coords.latitude, p.coords.longitude);\n        } else if (\n          !!JSON.parse(window.localStorage.getItem('position')).latitude &&\n          !!JSON.parse(window.localStorage.getItem('position')).longitude\n        ) {\n          if (\n            JSON.parse(window.localStorage.getItem('position')).latitude !==\n              +p.coords.latitude.toFixed(4) ||\n            JSON.parse(window.localStorage.getItem('position')).longitude !==\n              +p.coords.longitude.toFixed(4)\n          ) {\n            getPostion(p.coords.latitude, p.coords.longitude);\n          } else {\n            setPosition(JSON.parse(window.localStorage.getItem('position')));\n          }\n        }\n      },\n      error => {\n        if (!window.localStorage.getItem('position')) {\n          getPostion(37.645050399999995, 126.786284);\n        } else {\n          setPosition(JSON.parse(window.localStorage.getItem('position')));\n        }\n      },\n    );\n    setInterval(() => {\n      setTime({\n        date: moment.tz('Asia/Seoul').format('YYYY.MM.DD'),\n        hour: moment.tz('Asia/Seoul').format('hh'),\n        minute: moment.tz('Asia/Seoul').format('mm'),\n        seconds: moment.tz('Asia/Seoul').format('ss'),\n        ampm: moment.tz('Asia/Seoul').format('A'),\n      });\n    }, 300);\n  }, []);\n\n  // 날씨 가져오기\n\n  useEffect(() => {\n    function getWeather() {\n      setWeatherAxios(false);\n      if (\n        moment.tz('Asia/Seoul').format('HH') === '00' &&\n        +moment.tz('Asia/Seoul').format('mm') < 40\n      ) {\n        setWeatherAxios(true);\n        return;\n      }\n      const { x, y } = xyConv(position.latitude, position.longitude);\n      let timeBase;\n      if (+moment.tz('Asia/Seoul').format('mm') >= 40) {\n        timeBase = moment.tz('Asia/Seoul').format('HH00');\n      } else if (+moment.tz('Asia/Seoul').format('HH') < 11) {\n        timeBase = `0${+moment.tz('Asia/Seoul').format('HH00') - 100}`;\n      } else {\n        timeBase = `${+moment.tz('Asia/Seoul').format('HH00') - 100}`;\n      }\n\n      axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/http://newsky2.kma.go.kr/service/SecndSrtpdFrcstInfoService2/ForecastGrib?ServiceKey=j%2BeCKcismlZK%2BpaFNLrSPqSvTKVFFiiUqzXfxIXmNPl%2F4dWUGjlDL9wjnnAVFfGUGfJMK62lqnYwqLQe4r88fA%3D%3D&base_date=${moment\n            .tz('Asia/Seoul')\n            .format(\n              'YYYYMMDD',\n            )}&base_time=${timeBase}&nx=${x}&ny=${y}&_type=json`,\n        )\n        .then(data => {\n          setWeather({\n            time: moment.tz('Asia/Seoul').format('HHmm'),\n            date: moment.tz('Asia/Seoul').format('YYYYMMDD'),\n            item: data.data.response.body.items.item,\n            dong: position.dong,\n          });\n          window.localStorage.setItem(\n            'weather',\n            JSON.stringify({\n              time: moment.tz('Asia/Seoul').format('HHmm'),\n              date: moment.tz('Asia/Seoul').format('YYYYMMDD'),\n              item: data.data.response.body.items.item,\n              dong: position.dong,\n            }),\n          );\n          setWeatherAxios(true);\n        })\n        .catch(error => {\n          setWeatherAxios(true);\n        });\n    }\n    if (position && weatherAxios) {\n      if (!window.localStorage.getItem('weather')) {\n        getWeather();\n      } else if (!weather) {\n        setWeather(JSON.parse(window.localStorage.getItem('weather')));\n      }\n      if (weather && position) {\n        if (\n          Math.abs(\n            +moment.tz('Asia/Seoul').format('YYYYMMDDHHmm') -\n              +`${weather.item[0].baseDate}${weather.item[0].baseTime}`,\n          ) >= 140\n        ) {\n          getWeather();\n        }\n      }\n    }\n  }, [position, weather, time, weatherAxios]);\n\n  // 점수\n\n  useEffect(() => {\n    const scoreAll = [];\n    if (weather) {\n      if (\n        weather.item.filter(item => item.category === 'T1H')[0].obsrValue <=\n          900 &&\n        weather.item.filter(item => item.category === 'T1H')[0].obsrValue >=\n          -900\n      ) {\n        if (\n          weather.item.filter(item => item.category === 'T1H')[0].obsrValue >=\n            16 &&\n          weather.item.filter(item => item.category === 'T1H')[0].obsrValue <=\n            20\n        ) {\n          scoreAll[0] = 100;\n        } else if (\n          weather.item.filter(item => item.category === 'T1H')[0].obsrValue <=\n            40 &&\n          weather.item.filter(item => item.category === 'T1H')[0].obsrValue > 20\n        ) {\n          scoreAll[0] =\n            ((100 -\n              Math.abs(\n                weather.item.filter(item => item.category === 'T1H')[0]\n                  .obsrValue - 20,\n              ) *\n                5) /\n              10) *\n            9;\n          // 최고온도 40도 기준\n        } else if (\n          weather.item.filter(item => item.category === 'T1H')[0].obsrValue <\n            16 &&\n          weather.item.filter(item => item.category === 'T1H')[0].obsrValue >=\n            -34\n        ) {\n          scoreAll[0] =\n            100 -\n            (16 -\n              weather.item.filter(item => item.category === 'T1H')[0]\n                .obsrValue) *\n              2;\n\n          // 최저온도 -34도 기준\n        } else {\n          scoreAll[0] = 0;\n        }\n      } else {\n        scoreAll[0] = 50;\n      }\n      switch (\n        weather.item.filter(item => item.category === 'PTY')[0].obsrValue\n      ) {\n        case 0:\n          scoreAll[1] = 100;\n          break;\n        case 1:\n          scoreAll[1] = 30;\n          break;\n        case 2:\n          scoreAll[1] = 50;\n          break;\n        case 3:\n          scoreAll[1] = 70;\n          break;\n        case 4:\n          scoreAll[1] = 0;\n          break;\n        default:\n          scoreAll[1] = 50;\n          break;\n      }\n      if (\n        weather.item.filter(item => item.category === 'REH')[0].obsrValue >=\n          40 &&\n        weather.item.filter(item => item.category === 'REH')[0].obsrValue <= 70\n      ) {\n        scoreAll[2] = 100;\n      } else if (\n        weather.item.filter(item => item.category === 'REH')[0].obsrValue >=\n          0 &&\n        weather.item.filter(item => item.category === 'REH')[0].obsrValue <= 100\n      ) {\n        scoreAll[2] = 30;\n      } else {\n        scoreAll[2] = 30;\n      }\n    }\n    setScore(scoreAll);\n  }, [weather]);\n  return (\n    <>\n      <div id=\"weatherWrapper\">\n        <WeatherMain weather={weather} score={score} />\n        <WeatherCard weather={weather} score={score} />\n        <WeatherTime time={time} />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport './reset.css';\nimport './App.css';\nimport Weather from './component/Weather';\n\nfunction App() {\n  return (\n    <>\n      <header>\n        <div id=\"headerWrap\">방구석</div>\n      </header>\n      <Weather />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}